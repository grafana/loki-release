concurrency:
  group: "create-release-${{ github.sha }}"
jobs:
  release:
    runs-on: "ubuntu-latest"
    steps:
    - name: "pull code to release"
      uses: "actions/checkout@v3"
      with:
        path: "release"
        repository: "${{ inputs.release_repo }}"
    - name: "pull release library code"
      uses: "actions/checkout@v3"
      with:
        path: "lib"
        repository: "grafana/loki-release"
    - name: "setup node"
      uses: "actions/setup-node@v4"
      with:
        node-version: 20
    - env:
        ACTIONS_STEP_DEBUG: "true"
      name: "auth gcs"
      uses: "google-github-actions/auth@v2"
      with:
        credentials_json: "${{ secrets.GCS_SERVICE_ACCOUNT_KEY }}"
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"
      with:
        version: ">= 452.0.0"
    - id: "extract_branch"
      name: "extract branch name"
      run: |
        echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      shell: "bash"
      working-directory: "release"
    - id: "should_release"
      name: "should a release be created?"
      uses: "./lib/actions/should-release"
      with:
        baseBranch: "${{ steps.extract_branch.outputs.branch }}"
    - if: "${{ fromJSON(steps.should_release.outputs.shouldRelease) }}"
      name: "download build artifacts"
      run: |
        gsutil cp -r gs://loki-build-artifacts/${{ steps.should_release.outputs.sha }}/dist .
        ls dist
      shell: "bash"
      working-directory: "release"
    - id: "release"
      if: "${{ fromJSON(steps.should_release.outputs.shouldRelease) }}"
      name: "release please"
      run: |
        npm install
        npm exec -- release-please github-release \
          --draft \
          --release-type simple \
          --repo-url="${{ inputs.release_repo }}" \
          --target-branch "${{ steps.extract_branch.outputs.branch }}" \
          --token="${{ secrets.GH_TOKEN }}"
      shell: "bash"
      working-directory: "release"
    - env:
        GH_TOKEN: "${{ secrets.GH_TOKEN }}"
      id: "upload"
      if: "${{ fromJSON(steps.should_release.outputs.shouldRelease) }}"
      name: "upload artifacts"
      run: |
        gh release upload ${{ steps.should_release.outputs.name }} dist/*
        gh release edit ${{ steps.should_release.outputs.name }} --draft=false
      shell: "bash"
      working-directory: "release"
name: "create release"
"on":
  workflow_call:
    inputs:
      release_repo:
        default: "grafana/loki"
        description: "repo to make release in"
        required: false
        type: "string"
    secrets:
      GCS_SERVICE_ACCOUNT_KEY:
        required: true
      GH_TOKEN:
        required: true
permissions:
  contents: "write"
  pull-requests: "write"
