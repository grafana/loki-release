concurrency:
  group: "create-release-${{ github.sha }}"
jobs:
  release:
    runs-on: "ubuntu-latest"
    steps:
    - name: "pull loki code"
      uses: "actions/checkout@v3"
      with:
        path: "loki"
        ref: "prepare-release-please"
        repository: "grafana/loki"
    - name: "pull release code"
      uses: "actions/checkout@v3"
      with:
        path: "release"
        repository: "grafana/loki-release"
    - env:
        ACTIONS_STEP_DEBUG: "true"
      name: "auth gcs"
      uses: "google-github-actions/auth@v2"
      with:
        credentials_json: "${{ secrets.GCS_SERVICE_ACCOUNT_KEY }}"
    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"
      with:
        version: ">= 452.0.0"
    - id: "extract_branch"
      name: "extract branch name"
      run: |
        if [[ "${{ inputs.release_repo }}" == "grafana/loki" ]]; then
          cd loki
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        else
          cd release
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        fi
      shell: "bash"
    - id: "prepare"
      name: "prepare release"
      uses: "./release/actions/create-release"
      with:
        baseBranch: "${{ steps.extract_branch.outputs.branch }}"
    - if: "${{ fromJSON(steps.prepare.outputs.createRelease) }}"
      name: "download build artifacts"
      run: |
        gsutil cp -r gs://loki-build-artifacts/${{ steps.prepare.outputs.sha }}/dist .
        ls dist
      shell: "bash"
    - if: "${{ fromJSON(steps.prepare.outputs.createRelease) }}"
      name: "Import GPG Key"
      uses: "crazy-max/ghaction-import-gpg@v6"
      with:
        git_commit_gpgsign: true
        git_committer_email: "41898282+github-actions[bot]@users.noreply.github.com"
        git_committer_name: "GitHub Actions"
        git_tag_gpgsign: true
        git_user_signingkey: true
        gpg_private_key: "${{ secrets.GPG_PRIVATE_KEY }}"
        passphrase: "${{ secrets.GPG_PASSPHRASE }}"
        workdir: "release"
    - if: "${{ fromJSON(steps.prepare.outputs.createRelease) }}"
      name: "create release"
      uses: "softprops/action-gh-release@v1"
      with:
        body: "${{ steps.prepare.outputs.notes }}"
        fail_on_unmatched_files: true
        files: "dist/*"
        repository: "${{ inputs.release_repo }}"
        tag_name: "${{ steps.prepare.outputs.name }}"
        token: "${{ secrets.GH_TOKEN }}"
name: "create release"
"on":
  workflow_call:
    inputs:
      release_pr_workflow:
        default: "release-pr.yml"
        description: "workflow file that created the release pr"
        required: false
        type: "string"
      release_repo:
        default: "grafana/loki"
        description: "repo to make release in"
        required: false
        type: "string"
    secrets:
      GCS_SERVICE_ACCOUNT_KEY:
        required: true
      GH_TOKEN:
        required: true
      GPG_PASSPHRASE:
        required: true
      GPG_PRIVATE_KEY:
        required: true
permissions: "write-all"
