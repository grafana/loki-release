concurrency:
  group: "create-release-pr-${{ github.sha }}"
jobs:
  check:
    runs-on: "ubuntu-latest"
    steps:
    - name: "always green"
      run: "echo \"always green\""
      shell: "bash"
  create-release-pr:
    needs:
    - "dist"
    - "loki-image"
    - "promtail-image"
    runs-on: "ubuntu-latest"
    steps:
    - name: "pull code to release"
      uses: "actions/checkout@v3"
      with:
        path: "release"
        repository: "${{ inputs.release_repo }}"
    - name: "pull release library code"
      uses: "actions/checkout@v3"
      with:
        path: "lib"
        repository: "grafana/loki-release"
    - name: "setup node"
      uses: "actions/setup-node@v4"
      with:
        node-version: 20
    - id: "extract_branch"
      name: "extract branch name"
      run: |
        echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      shell: "bash"
      working-directory: "release"
    - id: "release"
      name: "release please"
      run: |
        npm install
        npm exec -- release-please release-pr \
          --token="${{ secrets.GH_TOKEN }}" \
          --repo-url="${{ inputs.release_repo }}" \
          --target-branch "${{ steps.extract_branch.outputs.branch }}"
      shell: "bash"
      working-directory: "lib"
  dist:
    needs:
    - "test"
    - "lint"
    - "check"
    runs-on: "ubuntu-latest"
    steps:
    - name: "pull code to release"
      uses: "actions/checkout@v3"
      with:
        path: "release"
        repository: "${{ inputs.release_repo }}"
    - env:
        ACTIONS_STEP_DEBUG: "true"
      name: "auth gcs"
      uses: "google-github-actions/auth@v2"
      with:
        credentials_json: "${{ secrets.GCS_SERVICE_ACCOUNT_KEY }}"
    - name: "upload changelog"
      run: |
        mkdir -p dist
        cp CHANGELOG.md dist/
      shell: "bash"
      working-directory: "release"
    - env:
        ACTIONS_STEP_DEBUG: "true"
      name: "upload build artifacts"
      uses: "google-github-actions/upload-cloud-storage@v1"
      with:
        destination: "loki-build-artifacts/${{ github.sha }}"
        path: "release/dist"
  lint:
    runs-on: "ubuntu-latest"
    steps:
    - name: "always green"
      run: "echo \"always green\""
      shell: "bash"
  loki-image:
    if: "${{ inputs.release_repo }} == grafana/loki"
    needs:
    - "test"
    - "lint"
    - "check"
    runs-on: "ubuntu-latest"
    steps:
    - name: "always green"
      run: "echo \"always green\""
      shell: "bash"
    strategy:
      fail-fast: true
      matrix:
        platform:
        - "linux/amd64"
        - "linux/arm64"
        - "linux/arm"
  promtail-image:
    if: "${{ inputs.release_repo }} == grafana/loki"
    needs:
    - "test"
    - "lint"
    - "check"
    runs-on: "ubuntu-latest"
    steps:
    - name: "always green"
      run: "echo \"always green\""
      shell: "bash"
    strategy:
      fail-fast: true
      matrix:
        platform:
        - "linux/amd64"
        - "linux/arm64"
        - "linux/arm"
  test:
    runs-on: "ubuntu-latest"
    steps:
    - name: "always green"
      run: "echo \"always green\""
      shell: "bash"
name: "create release PR"
"on":
  workflow_call:
    inputs:
      release_repo:
        default: "grafana/loki"
        description: "repo to make release PRs against"
        required: false
        type: "string"
    secrets:
      GCS_SERVICE_ACCOUNT_KEY:
        required: true
      GH_TOKEN:
        required: true
permissions:
  contents: "write"
  pull-requests: "write"
